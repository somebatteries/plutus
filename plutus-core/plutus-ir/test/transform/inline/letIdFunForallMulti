{- 
This tests that type application is counted properly.
idFun occurs more than once so it should not get inlined by the unconditional inlining
optimization. However, it is fully applied so it should get inlined by the optimization that inlines
fully applied functions.
-}

(let
    (nonrec)
    (termbind
      (strict)
      (vardecl idFun (all a (type) (fun a a)))
      (abs a (type) (lam x a x))
    )
    (termbind
      (strict)
      (vardecl k (fun (fun (all a (type (fun a a))) (type)) (con integer)))
      ([ { idFun (fun (con integer) (con integer)) } ((con integer 9)) ])
    [ { idFun (fun (con integer) (con integer)) } (lam x (con integer) x) ]
)